{"version":3,"file":"static/js/23.9a554ce0.chunk.js","mappings":"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","sources":["components/Conversation/Message.js","components/Conversation/MsgTypes.js","components/Conversation/Header.js","components/Conversation/Footer.js","components/Conversation/index.js","components/StyledBadge.js","../node_modules/phosphor-react/src/icons/Lock.tsx","../node_modules/phosphor-react/src/icons/Key.tsx","../node_modules/phosphor-react/src/icons/PencilCircle.tsx","../node_modules/phosphor-react/src/icons/Note.tsx","../node_modules/phosphor-react/src/icons/Info.tsx","sections/settings/ThemeDialog.js","pages/dashboard/Settings.js","../node_modules/@mui/material/esm/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/esm/DialogActions/DialogActions.js","../node_modules/phosphor-react/src/icons/Bell.tsx"],"sourcesContent":["import { Box, Stack } from '@mui/material'\nimport React from 'react';\nimport {Chat_History} from '../../data'\nimport { DocMsg, LinkMsg, MediaMsg, ReplyMsg, TextMsg, TimeLine } from './MsgTypes';\n\nconst Message = ({menu}) => {\n  return (\n    <Box p={3}>\n        <Stack spacing={3}>\n            {Chat_History.map((el)=>{\n                switch (el.type) {\n                    case 'divider':\n                      return <TimeLine el={el}/>\n                        \n                    case 'msg':\n                        switch (el.subtype) {\n                            case 'img':\n                              return <MediaMsg el={el} menu={menu}/>\n                            case 'doc':\n                                return <DocMsg el={el} menu={menu}/>\n                                \n                            case 'link':\n                                return <LinkMsg el={el} menu={menu}/>\n                            case 'reply':\n                                return <ReplyMsg el={el} menu={menu}/>\n                        \n                            default:\n                               return <TextMsg el={el} menu={menu}/>\n                        }\n                        break;\n                \n                    default:\n                      return <></>;\n                }\n            })}\n        </Stack>\n    </Box>\n  )\n}\n\nexport default Message","import { Box, Divider, IconButton, Link, Stack, Typography, Menu, MenuItem } from '@mui/material';\nimport { useTheme } from '@mui/material/styles'\nimport { DotsThreeVertical, DownloadSimple, Image } from 'phosphor-react';\nimport React from 'react';\nimport {Message_options} from '../../data'\n\nconst DocMsg = ({el,menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n        <Stack spacing={2}>\n            <Stack p={2} spacing={3} direction='row' alignItems='center' \n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\n                <Image size={48}/>\n                <Typography variant='caption'>\n                    Abstract.png\n                </Typography>\n                <IconButton>\n                    <DownloadSimple/>\n                </IconButton>\n            </Stack>\n            <Typography variant='body2' sx={{color: el.incoming ? theme.palette.text : '#fff' }} >\n                {el.message}\n            </Typography>\n        </Stack>\n        </Box>\n        {menu && <MessageOptions/>}\n        \n    </Stack>\n  )\n}\n\nconst LinkMsg = ({el,menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n        <Stack spacing={2}>\n            <Stack p={2} spacing={3} alignItems='start'\n             sx={{backgroundColor:theme.palette.background.paper, borderRadius: 1}}>\n                <img src={el.preview} alt={el.message} style={{maxHeight:210, borderRadius:'10px'}}/>\n                <Stack spacing={2}>\n                    <Typography variant='subtitle2'>Creating Chat App</Typography>\n                    <Typography variant='subtitle2' sx={{color:theme.palette.primary.main}} \n                    component={Link} to=\"//https://www.youtube.com\">www.youtube.com</Typography>\n                </Stack>\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\n                    {el.message}\n                </Typography>\n            </Stack>\n        </Stack>\n        </Box>\n        {menu && <MessageOptions/>}\n    </Stack>\n  )\n}\n\nconst ReplyMsg = ({el, menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n        <Stack spacing={2}>\n            <Stack p={2} direction='column' spacing={3} alignItems='center'\n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\n                <Typography variant='body2' color={theme.palette.text}>\n                    {el.message}\n                </Typography>    \n            </Stack>\n            <Typography variant='body2' color={ el.incoming ? theme.palette.text : '#fff'}>\n                {el.reply}\n            </Typography>\n        </Stack>\n        </Box>\n        {menu && <MessageOptions/>}\n    </Stack>\n  )\n}\n\nconst MediaMsg = ({el,menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n                <Stack spacing={1}>\n                    <img src={el.img} alt={el.message} style={{maxHeight: 210 , borderRadius:'10px'}}/>\n                    <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\n                        {el.message}\n                    </Typography>\n                </Stack>\n            </Box>\n            {menu && <MessageOptions/>}\n    </Stack>\n  )\n}\n\nconst TextMsg = ({el,menu}) => {\n    const theme = useTheme();\n    return (\n        <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n            <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\n                    {el.message}\n                </Typography>\n            </Box>\n            {menu && <MessageOptions/>}\n        </Stack>\n    )\n}\n\nconst TimeLine = ({ el }) => {\n    const theme = useTheme();\n    return <Stack direction='row' alignItems='center' justifyContent='space-between'>\n        <Divider width='46%' />\n        <Typography variant='caption' sx={{ color: theme.palette.text }}>\n            {el.text}\n        </Typography>\n        <Divider width='46%' />\n    </Stack>\n}\n\nconst MessageOptions = () => {\n    \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n    <DotsThreeVertical \n    id=\"basic-button\"\n    aria-controls={open ? 'basic-menu' : undefined}\n    aria-haspopup=\"true\"\n    aria-expanded={open ? 'true' : undefined}\n    onClick={handleClick}\n    size={20}\n    />\n\n    <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n      <Stack spacing={1} px={1}>\n        {Message_options.map((el)=>(\n            <MenuItem onClick={handleClick}>{el.title}</MenuItem>\n        ))}\n      </Stack>\n      </Menu>\n    </>\n  )\n}\n\n\n// should not be default export, because we need to export multiple things\nexport { TimeLine, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg }","import { Avatar, Box, Typography, IconButton, Divider, Stack, } from '@mui/material'\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from 'phosphor-react'\nimport React from 'react';\nimport { useTheme } from \"@mui/material/styles\";\nimport { faker } from '@faker-js/faker';\nimport StyledBadge from '../StyledBadge';\nimport { ToggleSidebar } from '../../redux/slices/app';\nimport { useDispatch } from 'react-redux';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    return (\n        <Box p={2} sx={{ width: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background.paper, boxShadow: '0px 0px 2px rgba(0,0,0,0.25)' }}>\n            <Stack alignItems={'center'} direction='row' justifyContent={'space-between'}\n                sx={{ width: '100%', height: '100%' }}>\n                <Stack direction={'row'} spacing={2}>\n                    <Box>\n                        <StyledBadge overlap=\"circular\"\n                            anchorOrigin={{ // position\n                                vertical: \"bottom\",\n                                horizontal: \"right\",\n                            }}\n                            variant=\"dot\">\n                            <Avatar alt={faker.name.fullName()} src={faker.image.avatar()} />\n                        </StyledBadge>\n\n                    </Box>\n                    <Stack spacing={0.2}>\n                        <Typography variant='subtitle2'>\n                            {faker.name.fullName()}\n                        </Typography>\n                        <Typography variant='caption'>\n                            Online\n                        </Typography>\n                    </Stack>\n                </Stack>\n                <Stack direction='row' alignItems='center' spacing={3}>\n                    <IconButton>\n                        <VideoCamera />\n                    </IconButton>\n                    <IconButton>\n                        <Phone />\n                    </IconButton>\n                    <IconButton>\n                        <MagnifyingGlass />\n                    </IconButton>\n                    <Divider orientation='vertical' flexItem />\n                    <IconButton onClick={() => {\n                    dispatch(ToggleSidebar());\n                    }}>\n                        <CaretDown />\n                    </IconButton>\n                </Stack>\n            </Stack>\n        </Box>\n    )\n}\n\nexport default Header","import { Box, Fab, IconButton, InputAdornment, Stack, TextField, Tooltip } from '@mui/material';\nimport React, { useState } from 'react';\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport { LinkSimple, PaperPlaneTilt, Smiley,Camera, File, Image, Sticker, User } from 'phosphor-react';\nimport data from '@emoji-mart/data'\nimport Picker from '@emoji-mart/react'\n\nconst StyledInput = styled(TextField)(({ theme }) => ({\n    \"& .MuiInputBase-input\": {\n      paddingTop: '12px',\n      paddingBottom: '12px',\n    }  \n  }));\n\n  const Actions = [\n    {\n        color:'#4da5fe',\n        icon: <Image size={24}/>,\n        y:102,\n        title:'Photo/Video'\n    },\n    {\n        color:'#1b8cfe',\n        icon: <Sticker size={24}/>,\n        y:172,\n        title:'Stickers'\n    },\n    {\n        color:'#0172e4',\n        icon: <Camera size={24}/>,\n        y:242,\n        title:'Image'\n    },\n    {\n        color:'#0159b2',\n        icon: <File size={24}/>,\n        y:312,\n        title:'Document'\n    },\n    {\n        color:'#013f7f',\n        icon: <User size={24}/>,\n        y:382,\n        title:'Contact'\n    }\n  ];\n\nconst ChatInput = ({setOpenPicker}) =>{\n    const [openAction, setOpenAction] = useState(false);\n    return (\n        <StyledInput fullWidth placeholder='Write a message...' variant='filled' InputProps={{\n            disableUnderline: true,\n            startAdornment: \n            <Stack sx={{width:'max-content'}}>\n                <Stack sx={{position:'relative', display: openAction ? 'inline-block' : 'none'}}>\n                    {Actions.map((el)=>(\n                        <Tooltip placement='right' title={el.title}>\n                            <Fab sx={{position:'absolute', top: -el.y, backgroundColor: el.color}}>\n                                {el.icon}\n                            </Fab>\n                        </Tooltip>\n                      \n                    ))}\n                </Stack>\n                <InputAdornment>\n                    <IconButton onClick={()=>{\n                        setOpenAction((prev)=>!prev)\n                    }}>\n                        <LinkSimple/>\n                    </IconButton>\n                </InputAdornment>\n            </Stack>\n            ,\n            endAdornment: <InputAdornment>\n            <IconButton onClick={()=>{\n                setOpenPicker((prev)=> !prev);\n            }}>\n                <Smiley/>\n            </IconButton>\n            </InputAdornment>\n        }}/>\n    )\n}\n\nconst Footer = () => {\n    const theme = useTheme();\n    const [openPicker, setOpenPicker] = useState(false);\n  return (\n    <Box p={2} sx={{ width:'100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' :\n     theme.palette.background.paper, boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\n    <Stack direction='row' alignItems={'center'} spacing={3}>\n\n        <Stack sx={{width:'100%'}}> \n             {/* Chat Input */}\n            <Box sx={{ display: openPicker ? 'inline' : 'none' , zIndex:10, position:'fixed',bottom:81, right:100}}>\n                <Picker theme={theme.palette.mode} data={data} onEmojiSelect={console.log}/>\n            </Box> \n            <ChatInput setOpenPicker={setOpenPicker}/>\n        </Stack>\n        \n        <Box sx={{height:48, width: 48, backgroundColor:theme.palette.primary.main, \n        borderRadius: 1.5}}>\n            <Stack sx={{height:'100%', width:'100%', alignItems:'center', justifyContent:'center'}}>\n                <IconButton>\n                    <PaperPlaneTilt color='#fff'/>\n                </IconButton>\n            </Stack>\n            \n        </Box>\n    </Stack>\n</Box>\n  )\n}\n\nexport default Footer","import {  Box, Stack} from '@mui/material';\nimport React from 'react';\nimport { useTheme } from \"@mui/material/styles\";\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\n\nconst Conversation = () => {\n    const theme = useTheme();\n  return (\n    <Stack height={'100%'} maxHeight={'100vh'} width={'auto'}>\n\n        {/* Chat header */}\n        <Header/>\n        {/* Msg */}\n        <Box className='scrollbar' width={\"100%\"} sx={{flexGrow:1, height:'100%', overflowY:'scroll'}}>\n        <Message menu={true}/>\n        </Box>\n        {/* Chat footer */}\n       <Footer/>\n    </Stack>\n  )\n}\n\nexport default Conversation","import styled from \"@emotion/styled\";\nimport { Badge } from \"@mui/material\";\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n    \"& .MuiBadge-badge\": {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  }));\n\n  export default StyledBadge","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <rect x=\"40\" y=\"88\" width=\"176\" height=\"128\" rx=\"8\" opacity=\"0.2\" />\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M208,80H172V52a44,44,0,0,0-88,0V80H48A16,16,0,0,0,32,96V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V96A16,16,0,0,0,208,80Zm-80,84a12,12,0,1,1,12-12A12,12,0,0,1,128,164Zm28-84H100V52a28,28,0,0,1,56,0Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <rect\n      x=\"40\"\n      y=\"88\"\n      width=\"176\"\n      height=\"128\"\n      rx=\"8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M92,88V52a36,36,0,0,1,72,0V88\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"128\" cy=\"152\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Lock = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nLock.displayName = \"Lock\";\n\nexport default Lock;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M160,16A80.1,80.1,0,0,0,83.9,120.8L26.3,178.3A8.1,8.1,0,0,0,24,184v40a8,8,0,0,0,8,8H72a8,8,0,0,0,8-8V208H96a8,8,0,0,0,8-8V184h16a8.1,8.1,0,0,0,5.7-2.3l9.5-9.6A80,80,0,1,0,160,16Zm20,76a16,16,0,1,1,16-16A16,16,0,0,1,180,92Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M93.2,122.8A70.3,70.3,0,0,1,88,96a72,72,0,1,1,72,72,70.3,70.3,0,0,1-26.8-5.2h0L120,176H96v24H72v24H32V184l61.2-61.2Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"180\" cy=\"76\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Key = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nKey.displayName = \"Key\";\n\nexport default Key;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M128,200a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M128,224V200a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"98.5\"\n      y1=\"136\"\n      x2=\"157.5\"\n      y2=\"136\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M80,211.2a96,96,0,1,1,96,0h0V176L128,72,80,176v35.2Z\"\n      opacity=\"0.2\"\n    />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M201.5,54.5a103.8,103.8,0,0,0-147,0,103.8,103.8,0,0,0,0,147,103.8,103.8,0,0,0,147,0,103.8,103.8,0,0,0,0-147ZM128,170.9a31.9,31.9,0,0,0-32.3-9.8L111,128h34l15.3,33.1a31.9,31.9,0,0,0-32.3,9.8Zm40,35.5a89,89,0,0,1-32,9.2V192a16,16,0,0,1,32,0Zm22.2-16.2c-2,2-4.1,3.9-6.2,5.7V176a9.8,9.8,0,0,0-.7-3.4l-48-104h-.1a4.1,4.1,0,0,0-.5-.9c0-.1,0-.1-.1-.2l-.5-.7H134a4.6,4.6,0,0,0-.7-.7h-.2l-.7-.6h-.2l-.8-.5h-.1l-.9-.3h-.3l-.9-.2h-2.4l-1,.2h-.2l-.8.3h-.2l-.9.4h-.1l-.7.6h-.2l-.7.7h-.1l-.5.7-.2.2a4.1,4.1,0,0,1-.5.9l-22.1,48h0L72.7,172.6A9.8,9.8,0,0,0,72,176v19.9c-2.1-1.8-4.2-3.7-6.2-5.7a88,88,0,1,1,124.4,0Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"176 211.2 176 176 128 72 80 176 80 211.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,192a24,24,0,0,1,48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M128,224V192a24,24,0,0,0-48,0\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"102.2\"\n      y1=\"128\"\n      x2=\"153.8\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst PencilCircle = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPencilCircle.displayName = \"PencilCircle\";\n\nexport default PencilCircle;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"108\"\n      x2=\"160\"\n      y2=\"108\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"148\"\n      x2=\"116\"\n      y2=\"148\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"215.3 156 156 156 156 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"216 160 160 160 160 216 216 160\" opacity=\"0.2\" />\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H156.7a15.9,15.9,0,0,0,11.3-4.7L219.3,168a15.9,15.9,0,0,0,4.7-11.3V48A16,16,0,0,0,208,32ZM96,88h64a8,8,0,0,1,0,16H96a8,8,0,0,1,0-16Zm32,80H96a8,8,0,0,1,0-16h32a8,8,0,0,1,0,16ZM96,136a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Zm64,68.7V160h44.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"96\"\n      y1=\"96\"\n      x2=\"160\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"128\"\n      x2=\"160\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"96\"\n      y1=\"160\"\n      x2=\"128\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M156.7,216H48a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8H208a8,8,0,0,1,8,8V156.7a7.9,7.9,0,0,1-2.3,5.6l-51.4,51.4A7.9,7.9,0,0,1,156.7,216Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"215.3 160 160 160 160 215.3\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Note = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nNote.displayName = \"Note\";\n\nexport default Note;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"120 124 128 124 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"128\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm-2,48a12,12,0,1,1-12,12A12,12,0,0,1,126,72Zm10,112h-8a8,8,0,0,1-8-8V128a8,8,0,0,1,0-16h8a8,8,0,0,1,8,8v48a8,8,0,0,1,0,16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"120 120 128 120 128 176 136 176\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"126\" cy=\"84\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Info = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nInfo.displayName = \"Info\";\n\nexport default Info;\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  Slide,\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ThemeDialog = ({ open, handleClose }) => {\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle sx={{ mb: 2 }}>{\"Choose Theme\"}</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl>\r\n            <RadioGroup\r\n              aria-labelledby=\"demo-radio-buttons-group-label\"\r\n              defaultValue=\"light\"\r\n              name=\"radio-buttons-group\"\r\n            >\r\n              <FormControlLabel\r\n                value=\"light\"\r\n                control={<Radio />}\r\n                label=\"Light\"\r\n              />\r\n              <FormControlLabel \r\n                  value=\"dark\" \r\n                  control={<Radio />} \r\n                  label=\"Dark\" />\r\n              <FormControlLabel\r\n                value=\"system\"\r\n                control={<Radio />}\r\n                label=\"System Default\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeDialog;","import { Avatar, Box, Divider, IconButton, Stack, Typography } from '@mui/material'\nimport React, {useState} from 'react';\nimport { useTheme } from \"@mui/material/styles\";\nimport { Bell, CaretLeft, Image, Info, Key, Keyboard, Lock, Note, PencilCircle } from 'phosphor-react';\nimport { faker } from '@faker-js/faker';\nimport ThemeDialog from '../../sections/settings/ThemeDialog';\nimport Conversation from '../../components/Conversation';\n\nconst Settings = () => {\n\n    const theme = useTheme();\n\n    const [openTheme, setOpenTheme] = useState(false);\n\n    const handleOpenTheme = ()=>{\n        setOpenTheme(true);\n    }\n\n    const handleCloseTheme = ()=>{\n        setOpenTheme(false);\n    }\n\n    const list = [\n      {\n        key:0,\n        icon: <Bell size={20}/>,\n        title: 'Notifications',\n        onclick: () =>{}\n      },\n      {\n        key:1,\n        icon: <Lock size={20}/>,\n        title: 'Privacy',\n        onclick: () =>{}\n      },\n      {\n        key:2,\n        icon: <Key size={20}/>,\n        title: 'Security',\n        onclick: () =>{}\n      },\n      {\n        key:3,\n        icon: <PencilCircle size={20}/>,\n        title: 'Theme',\n        //onclick: handleOpenTheme\n        onclick: handleOpenTheme\n      },\n      {\n        key:4,\n        icon: <Image size={20}/>,\n        title: 'Chat Wallpaper',\n        onclick: () =>{}\n      },\n      {\n        key:5,\n        icon: <Note size={20}/>,\n        title: 'Request Account Info',\n        onclick: () =>{}\n      },\n      \n      {\n        key:6,\n        icon: <Info size={20}/>,\n        title: 'Help',\n        onclick: () =>{}\n      },\n    ]\n\n  return (\n    <>\n    <Stack direction='row' sx={{width:'100%'}}>\n        {/* Left panel */}\n        <Box className='scrollbar' sx={{overflow:'scroll', height:'100vh', width:320, \n        backgroundColor:theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background,\n        boxShadow:'0px 0px 2px rgba(0)'}}>\n          \n            <Stack p={4} spacing={5}>\n                {/* Header */}\n                <Stack direction={'row'} alignItems='center' spacing={3}>\n                    <IconButton>\n                        <CaretLeft size={24} color='#4B4B4B'/>\n                    </IconButton>\n                    <Typography variant='h6'>Settings</Typography>\n                </Stack>\n                {/* Profile */}\n                <Stack direction='row' spacing={3}>\n                    <Avatar sx={{height:56, width:56}} src={faker.image.avatar()} alt={faker.name.fullName()}/>\n                    <Stack spacing={0.5}>\n                        <Typography variant='article'>\n                            {faker.name.fullName()}\n                        </Typography>\n                        <Typography variant='body2'>\n                            {faker.random.words()}\n                        </Typography>\n                    </Stack>\n                </Stack>\n                {/* List of options */}\n                <Stack spacing={4}>\n                    {list.map(({key,icon,title,onclick})=> <>\n                        <Stack spacing={2} sx={{cursor:'pointer'}} onClick={onclick}>\n                            <Stack direction='row' spacing={2} >\n                                {icon}\n                                <Typography variant='body2'>{title}</Typography>\n                            </Stack>\n                            {key !== 6 && <Divider/>}\n                        </Stack>\n                    </>)}\n                </Stack>\n            </Stack>\n            \n        </Box>\n        {/* Right panel */}\n        \n    </Stack>\n\n    {openTheme && <ThemeDialog open={openTheme} handleClose={handleCloseTheme}/>}\n     \n    </>\n  )\n}\n\nexport default Settings","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M220.8,175.9c-5.9-10.2-13-29.6-13-63.9v-7.1c0-44.3-35.5-80.6-79.2-80.9H128a79.9,79.9,0,0,0-79.8,80v8c0,34.3-7.1,53.7-13,63.9A16,16,0,0,0,49,200H88a40,40,0,0,0,80,0h39a15.9,15.9,0,0,0,13.9-8A16.2,16.2,0,0,0,220.8,175.9ZM128,224a24.1,24.1,0,0,1-24-24h48A24.1,24.1,0,0,1,128,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M56.2,104a71.9,71.9,0,0,1,72.3-72c39.6.3,71.3,33.2,71.3,72.9V112c0,35.8,7.5,56.6,14.1,68a8,8,0,0,1-6.9,12H49a8,8,0,0,1-6.9-12c6.6-11.4,14.1-32.2,14.1-68Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M96,192v8a32,32,0,0,0,64,0v-8\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Bell = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nBell.displayName = \"Bell\";\n\nexport default Bell;\n"],"names":["menu","p","spacing","Chat_History","el","type","subtype","DocMsg","theme","useTheme","direction","justifyContent","incoming","sx","backgroundColor","palette","background","default","primary","main","borderRadius","width","alignItems","paper","size","variant","color","text","message","MessageOptions","LinkMsg","src","preview","alt","style","maxHeight","component","Link","to","ReplyMsg","reply","MediaMsg","img","TextMsg","TimeLine","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","id","undefined","onClick","onClose","MenuListProps","px","Message_options","title","dispatch","useDispatch","Box","mode","boxShadow","Stack","height","StyledBadge","overlap","anchorOrigin","vertical","horizontal","Avatar","faker","Typography","IconButton","Divider","orientation","flexItem","ToggleSidebar","StyledInput","styled","TextField","paddingTop","paddingBottom","Actions","icon","y","ChatInput","setOpenPicker","useState","openAction","setOpenAction","fullWidth","placeholder","InputProps","disableUnderline","startAdornment","position","display","map","Tooltip","placement","Fab","top","InputAdornment","prev","endAdornment","openPicker","zIndex","bottom","right","data","onEmojiSelect","console","log","className","flexGrow","overflowY","Message","Badge","left","animation","border","content","transform","opacity","pathsByWeight","Map","set","x","rx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","cx","cy","r","renderPath","weight","renderPathForWeight","Lock","forwardRef","props","ref","IconBase","displayName","Key","points","x1","y1","x2","y2","PencilCircle","Note","Info","Transition","Slide","handleClose","Dialog","TransitionComponent","keepMounted","DialogTitle","mb","DialogContent","FormControl","RadioGroup","defaultValue","name","FormControlLabel","value","control","Radio","label","DialogActions","Button","openTheme","setOpenTheme","list","key","onclick","overflow","cursor","getDialogActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogActionsRoot","overridesResolver","styles","ownerState","root","disableSpacing","_extends","padding","flex","marginLeft","inProps","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","Bell"],"sourceRoot":""}