{"version":3,"file":"static/js/240.3b4d58ca.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import React from 'react';\nimport { FormProvider as Form } from 'react-hook-form';\n\nconst FormProvider = ({children, onSubmit, methods}) => {\n  return (\n    <Form {...methods}>\n        <form onSubmit={onSubmit}>\n            {children}\n        </form>\n    </Form>\n  )\n}\n\nexport default FormProvider","import PropTypes from \"prop-types\";\n//form\nimport { useFormContext,Controller } from \"react-hook-form\";\n// @mui\nimport { TextField } from \"@mui/material\";\n\nRHFTextField.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    helperText: PropTypes.node\n}\n\nexport default function RHFTextField({name, helperText, ...other}){\n\n    const {control} = useFormContext();\n    return (\n       <Controller name={name} control={control} render={({field,fieldState:{error}})=>(\n        <TextField {...field} fullWidth\n         value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n         error={!!error} helperText={error ? error.message : helperText}\n        {...other}/>\n       )}/>\n    )\n}","import React , { useState } from 'react';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport FormProvider from '../../components/hook-form/FormProvider'\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Alert, Button, IconButton, InputAdornment, Link, Stack } from '@mui/material';\nimport { RHFTextField } from '../../components/hook-form';\nimport { Eye, EyeSlash } from 'phosphor-react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst NewPasswordForm = () => {\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  //validation rules \n  const NewPasswordSchema = Yup.object().shape({\n       newPassword:Yup.string().min(6,'Password must be atleast 6 characters').required('Password is required'),\n       confirmPassword:Yup.string().required('Password is required').oneOf([Yup.ref('newPassword'), null],'Password must match')\n  });\n\n  const defaultValues = {\n    newPassword:'',\n    password:''\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(NewPasswordSchema),\n    defaultValues\n  });\n\n  const {reset, setError, handleSubmit, formState:{errors, isSubmitting, isSubmitSuccessful}}\n   = methods;\n\n   const onSubmit = async (data) =>{\n        try {\n            //submit data to backend\n        } catch (error) {\n            console.log(error);\n            reset();\n            setError('afterSubmit',{\n                ...error,\n                message: error.message\n            })\n        }\n   }\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3}>\n            {!!errors.afterSubmit && <Alert severity='error'>{errors.afterSubmit.message}</Alert>}\n        \n        <RHFTextField name='newPassword' label='New Password' type={showPassword ? 'text' : 'password'}\n        InputProps={{endAdornment:(\n            <InputAdornment>\n            <IconButton onClick={()=>{\n                setShowPassword(!showPassword);\n            }}>\n                {showPassword ? <Eye/>: <EyeSlash/>}\n            </IconButton>\n            </InputAdornment>\n        )}}/>\n\n        <RHFTextField name='confirmPassword' label='Confirm Password' type={showPassword ? 'text' : 'password'}\n        InputProps={{endAdornment:(\n            <InputAdornment>\n            <IconButton onClick={()=>{\n                setShowPassword(!showPassword);\n            }}>\n                {showPassword ? <Eye/>: <EyeSlash/>}\n            </IconButton>\n            </InputAdornment>\n        )}}/>\n\n        \n        <Button fullWidth color='inherit' size='large' type='submit' variant='contained'\n        sx={{bgcolor:'text.primary', color:(theme)=> theme.palette.mode === 'light' ?\n         'common.white':'grey.800',\n         '&:hover':{\n            bgcolor:'text.primary',\n            color:(theme)=> theme.palette.mode === 'light' ? 'common.white':'grey.800',\n         }}}>Submit</Button>\n        </Stack>\n\n    </FormProvider>\n  )\n}\n\nexport default NewPasswordForm","import { Link, Stack, Typography } from '@mui/material'\nimport { CaretLeft } from 'phosphor-react'\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport NewPasswordForm from '../../sections/auth/NewPasswordForm';\n\nconst NewPassword = () => {\n  return (\n    <>\n    <Stack spacing={2} sx={{mb:5, position:'relative'}}>\n    <Typography variant='h3' paragraph>Reset Password?</Typography>\n    <Typography sx={{color:'text.secondary', mb:5}}>Please set your new password</Typography>  \n    </Stack>\n    {/* New Password Form */}\n\n    <NewPasswordForm/>\n\n    <Link component={RouterLink} to='/auth/login' color='inherit' variant='subtitle2' \n         sx={{mt:3, mx:'auto', alignItems:'center', display:'inline-flex'}}>\n          <CaretLeft/>\n          Return to sign in\n         </Link>\n    </>\n  )\n}\n\nexport default NewPassword","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","useState","showPassword","setShowPassword","NewPasswordSchema","Yup","shape","newPassword","min","required","confirmPassword","oneOf","useForm","resolver","yupResolver","defaultValues","password","handleSubmit","reset","setError","formState","errors","isSubmitting","isSubmitSuccessful","data","FormProvider","Stack","spacing","afterSubmit","Alert","severity","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","Button","color","size","variant","sx","bgcolor","theme","palette","mode","mb","position","Typography","paragraph","Link","component","RouterLink","to","mt","mx","alignItems","display","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","opacity","d","renderPath","weight","renderPathForWeight","CaretLeft","forwardRef","props","ref","IconBase","displayName"],"sourceRoot":""}