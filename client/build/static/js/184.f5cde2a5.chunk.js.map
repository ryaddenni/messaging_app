{"version":3,"file":"static/js/184.f5cde2a5.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/RegisterForm.js","pages/auth/Register.js","../node_modules/phosphor-react/src/icons/GoogleLogo.tsx","../node_modules/phosphor-react/src/icons/GithubLogo.tsx","../node_modules/phosphor-react/src/icons/TwitterLogo.tsx","sections/auth/AuthSocial.js"],"sourcesContent":["import React from 'react';\nimport { FormProvider as Form } from 'react-hook-form';\n\nconst FormProvider = ({children, onSubmit, methods}) => {\n  return (\n    <Form {...methods}>\n        <form onSubmit={onSubmit}>\n            {children}\n        </form>\n    </Form>\n  )\n}\n\nexport default FormProvider","import PropTypes from \"prop-types\";\n//form\nimport { useFormContext,Controller } from \"react-hook-form\";\n// @mui\nimport { TextField } from \"@mui/material\";\n\nRHFTextField.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    helperText: PropTypes.node\n}\n\nexport default function RHFTextField({name, helperText, ...other}){\n\n    const {control} = useFormContext();\n    return (\n       <Controller name={name} control={control} render={({field,fieldState:{error}})=>(\n        <TextField {...field} fullWidth\n         value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n         error={!!error} helperText={error ? error.message : helperText}\n        {...other}/>\n       )}/>\n    )\n}","import { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as Yup from 'yup';\nimport FormProvider from '../../components/hook-form/FormProvider';\nimport { Alert, Button, IconButton, InputAdornment, Stack } from '@mui/material';\nimport { RHFTextField } from '../../components/hook-form';\nimport { Eye, EyeSlash } from 'phosphor-react';\n\nconst RegisterForm = () => {\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    //validation rules \n    const registerSchema = Yup.object().shape({\n      firstName:Yup.string().required('First Name is required'),\n      lastName:Yup.string().required('Last Name is required'),\n      email:Yup.string().required('Email is required').email('Email must be a valid email address'),\n      password:Yup.string().required('Password is required')\n    });\n  \n    const defaultValues = {\n      firstName:'',\n      lastName:'',\n      email:'dulanjali@gmail.com',\n      password:'dula@123'\n    };\n  \n    const methods = useForm({\n      resolver: yupResolver(registerSchema),\n      defaultValues\n    });\n  \n    const {reset, setError, handleSubmit, formState:{errors, isSubmitting, isSubmitSuccessful}}\n     = methods;\n  \n     const onSubmit = async (data) =>{\n          try {\n              //submit data to backend\n          } catch (error) {\n              console.log(error);\n              reset();\n              setError('afterSubmit',{\n                  ...error,\n                  message: error.message\n              })\n          }\n     }\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3}>\n        {!!errors.afterSubmit && <Alert severity='error'>{errors.afterSubmit.message}</Alert>}\n        <Stack direction={{xs:'column', sm:'row'}} spacing={2}>\n            <RHFTextField name=\"firstName\" label='First Name'/>\n            <RHFTextField name=\"lastName\" label='Last Name'/>\n        </Stack>\n        <RHFTextField name='email' label='Email address'/>\n        <RHFTextField name='password' label='Password' type={showPassword ? 'text' : 'password'}\n        InputProps={{endAdornment:(\n            <InputAdornment>\n            <IconButton onClick={()=>{\n                setShowPassword(!showPassword);\n            }}>\n                {showPassword ? <Eye/>: <EyeSlash/>}\n            </IconButton>\n            </InputAdornment>\n        )}}/>\n        <Button fullWidth color='inherit' size='large' type='submit' variant='contained'\n        sx={{bgcolor:'text.primary', color:(theme)=> theme.palette.mode === 'light' ?\n         'common.white':'grey.800',\n         '&:hover':{\n            bgcolor:'text.primary',\n            color:(theme)=> theme.palette.mode === 'light' ? 'common.white':'grey.800',\n         }}}>Create Account</Button>\n        </Stack>\n        \n    </FormProvider>\n  )\n}\n\nexport default RegisterForm","import { Link, Stack, Typography } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport React from 'react'\nimport RegisterForm from '../../sections/auth/RegisterForm';\nimport AuthSocial from '../../sections/auth/AuthSocial';\n\nconst Register = () => {\n  return (\n    <Stack spacing={2} sx={{mb:5, position:'relative'}}>\n        <Typography variant='h4'>\n            Get Started With WeChat\n        </Typography>\n        <Stack direction={'row'} spacing={0.5}>\n            <Typography variant='body2'>Allready have an account?</Typography>\n            <Link component={RouterLink} to='/auth/login' variant='subtitle2'>Sign in</Link>\n        </Stack>\n        {/* Register Form */}\n        <RegisterForm/>\n\n        <Typography component={'div'} sx={{color:'text.secondary', mt:3, typography:'caption'\n    ,textAlign:'center'}}>{'By signining up, I agree to '}\n    <Link underline='always' color='text.primary'>Terms of service</Link>{' and '}\n    <Link underline='always' color='text.primary'>Privacy policy</Link>\n    </Typography>\n    <AuthSocial/>\n    </Stack>\n  )\n}\n\nexport default Register","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm0,184A80,80,0,1,1,184.6,71.4a8,8,0,0,1,0,11.3,7.9,7.9,0,0,1-11.3,0A64.1,64.1,0,1,0,191.5,136H128a8,8,0,0,1,0-16h72a8,8,0,0,1,8,8A80.1,80.1,0,0,1,128,208Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,128h88a88.1,88.1,0,1,1-25.8-62.2\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GoogleLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGoogleLogo.displayName = \"GoogleLogo\";\n\nexport default GoogleLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M224,224a8,8,0,0,1-8,8,32.1,32.1,0,0,1-32-32v-8a16,16,0,0,0-16-16H156v40a16,16,0,0,0,16,16,8,8,0,0,1,0,16,32.1,32.1,0,0,1-32-32V176H116v40a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16V176H88a16,16,0,0,0-16,16v8a32.1,32.1,0,0,1-32,32,8,8,0,0,1,0-16,16,16,0,0,0,16-16v-8a32.1,32.1,0,0,1,14.8-27A55.8,55.8,0,0,1,48,120v-8a58,58,0,0,1,7.7-28.3A59.9,59.9,0,0,1,61.1,36,7.8,7.8,0,0,1,68,32a59.7,59.7,0,0,1,48,24h24a59.7,59.7,0,0,1,48-24,7.8,7.8,0,0,1,6.9,4,59.9,59.9,0,0,1,5.4,47.7A58,58,0,0,1,208,112v8a55.8,55.8,0,0,1-22.8,45A32.1,32.1,0,0,1,200,192v8a16,16,0,0,0,16,16A8,8,0,0,1,224,224Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M84,240a23.9,23.9,0,0,0,24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M172,240a23.9,23.9,0,0,1-24-24V168\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M152,168h16a23.9,23.9,0,0,1,24,24v8a23.9,23.9,0,0,0,24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M104,168H88a23.9,23.9,0,0,0-24,24v8a23.9,23.9,0,0,1-24,24\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M111.8,64A52,52,0,0,0,68,40a52,52,0,0,0-3.5,44.7A49.3,49.3,0,0,0,56,112v8a48,48,0,0,0,48,48h48a48,48,0,0,0,48-48v-8a49.3,49.3,0,0,0-8.5-27.3A52,52,0,0,0,188,40a52,52,0,0,0-43.8,24Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst GithubLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nGithubLogo.displayName = \"GithubLogo\";\n\nexport default GithubLogo;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M245.7,77.7l-30.2,30.1C209.5,177.7,150.5,232,80,232c-14.5,0-26.5-2.3-35.6-6.8-7.3-3.7-10.3-7.6-11.1-8.8a8,8,0,0,1,3.9-11.9c.2-.1,23.8-9.1,39.1-26.4a108.6,108.6,0,0,1-24.7-24.4c-13.7-18.6-28.2-50.9-19.5-99.1a8.1,8.1,0,0,1,5.5-6.2,8,8,0,0,1,8.1,1.9c.3.4,33.6,33.2,74.3,43.8V88a48.3,48.3,0,0,1,48.6-48,48.2,48.2,0,0,1,41,24H240a8,8,0,0,1,7.4,4.9A8.4,8.4,0,0,1,245.7,77.7Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M128,88c0-22,18.5-40.3,40.5-40a40,40,0,0,1,36.2,24H240l-32.3,32.3A127.9,127.9,0,0,1,80,224c-32,0-40-12-40-12s32-12,48-36c0,0-64-32-48-120,0,0,40,40,88,48Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst TwitterLogo = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nTwitterLogo.displayName = \"TwitterLogo\";\n\nexport default TwitterLogo;\n","import { Divider, IconButton, Stack } from '@mui/material'\nimport { GithubLogo, GoogleLogo, TwitterLogo } from 'phosphor-react'\nimport React from 'react'\n\nconst AuthSocial = () => {\n  return (\n    <div>\n        <Divider sx={{my:2.5, typography:'overline', color:'text.disabled', '&::before, ::after':{\n            borderTopStyle:'dashed'\n        }}}>OR</Divider>\n        <Stack direction={'row'} justifyContent='center' spacing={2}>\n            <IconButton>\n                <GoogleLogo color='#DF3E30'/>\n            </IconButton>\n            <IconButton color='inherit'>\n                <GithubLogo />\n            </IconButton>\n            <IconButton>\n                <TwitterLogo color='#1C9CEA'/>\n            </IconButton>\n        </Stack>\n    </div>\n  )\n}\n\nexport default AuthSocial"],"names":["children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","useState","showPassword","setShowPassword","registerSchema","Yup","shape","firstName","required","lastName","email","password","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setError","formState","errors","isSubmitting","isSubmitSuccessful","data","FormProvider","Stack","spacing","afterSubmit","Alert","severity","direction","xs","sm","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","Button","color","size","variant","sx","bgcolor","theme","palette","mode","mb","position","Typography","Link","component","RouterLink","to","mt","typography","textAlign","underline","AuthSocial","pathsByWeight","Map","set","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","renderPath","weight","renderPathForWeight","GoogleLogo","forwardRef","props","ref","IconBase","displayName","opacity","GithubLogo","TwitterLogo","Divider","my","borderTopStyle","justifyContent"],"sourceRoot":""}